name: CI

# Trigger the workflow on push or pull request, but only for the master branch
on:
  pull_request:
  push:
    branches: [master]

jobs:
  cabal:
    name: Cabal ${{ matrix.cabal }} / GHC ${{ matrix.ghc }}
    strategy:
      matrix:
        cabal: ["3.2.0.0", "3.4.0.0"]
        ghc: ["8.10.5", "9.0.1"]
        os: [ubuntu-latest]
        exclude:
          - cabal: "3.2.0.0"
            ghc: "9.0.1"
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
      if: github.event.action == 'opened' || github.event.action == 'synchronize' || github.event.ref == 'refs/heads/master'

    - uses: haskell/actions/setup@v1
      name: Setup Haskell
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: ${{ matrix.cabal }}

    - uses: actions/cache@v2
      name: Cache ~/.cabal/store
      with:
        path: ~/.cabal/store
        key: ${{ runner.os }}-${{ matrix.ghc }}-cabal

    - name: Build
      run: |
        cabal v2-update
        cabal v2-build --enable-tests --enable-benchmarks

  stack:
    name: Stack / lts-18.3
    runs-on: ubuntu-latest
    strategy:
      matrix:
        stack: ["2.7.3"]
        ghc: ["8.10.4"]
    steps:
    - uses: actions/checkout@v2
      if: github.event.action == 'opened' || github.event.action == 'synchronize' || github.event.ref == 'refs/heads/master'

    - uses: haskell/actions/setup@v1
      name: Setup Haskell
      with:
        ghc-version: ${{ matrix.ghc }}
        stack-version: ${{ matrix.stack }}

    - uses: actions/cache@v2
      name: Cache ~/.stack
      with:
        path: ~/.stack
        key: ${{ runner.os }}-${{ matrix.ghc }}-stack

    - name: Install dependencies
      run: |
        stack build --system-ghc --test --bench --no-run-tests --no-run-benchmarks --only-dependencies

    - name: Build
      run: |
        stack build --system-ghc --test --bench --no-run-tests --no-run-benchmarks

    - name: Package static binary
      shell: bash
      run: |
        mkdir package
        dir=$(stack --system-ghc path --dist-dir)/build/telegraf-openvpn
        [[ -e "$dir/telegraf-openvpn" ]] && cp "$dir/telegraf-openvpn" ./package/telegraf-openvpn

    - name: Upload static binary
      uses: actions/upload-artifact@v2
      with:
        name: telegraf-openvpn-static
        path: package/

